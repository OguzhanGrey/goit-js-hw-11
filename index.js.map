{"version":3,"file":"index.js","sources":["../src/js/main.js"],"sourcesContent":["import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst button = document.querySelector('#button');\nconst input = document.querySelector('#input');\nconst gallery = document.querySelector('.gallery');\nconst API_KEY = '49258483-ada97ff0ca07db67d4b766dd0';\nconst loader = document.querySelector('.loader');\nlet page = 1;\nlet lightbox;\n\nbutton.addEventListener('click', () => {\n  loader.style.display = 'block';\n  const query = input.value.trim();\n  if (query === '') {\n    return;\n  }\n\n  gallery.innerHTML = '';\n\n  const URL = `https://pixabay.com/api/?key=${API_KEY}&q=${encodeURIComponent(\n    query\n  )}&image_type=photo&orientation=horizontal&safesearch=true&per_page=15&page=${page}`;\n\n  fetch(URL)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(\n          'Sorry, there are no images matching your search query. Please try again!'\n        );\n      }\n      return response.json();\n    })\n    .then(data => {\n      loader.style.display = 'none';\n      const images = data.hits;\n\n      if (images.length === 0) {\n        throw new Error(\n          'Sorry, there are no images matching your search query. Please try again!'\n        );\n      }\n\n      const insertHTML = images\n        .map(\n          image =>\n            `<li class=\"gallery-item\">\n          <div class=\"photo-cards\">\n            <ul class=\"photo-information\">\n            <li class=\"photo-information-list\"><b>Likes:</b>  ${image.likes}</li>\n            <li class=\"photo-information-list\"><b>Views:</b>  ${image.views}</li>\n            <li class=\"photo-information-list\"><b>Comments:</b> ${image.comments}</li>\n            <li class=\"photo-information-list\"><b>Downloads:</b> ${image.downloads}</li>\n            </ul>\n          </div>\n        <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n            <img\n                 class=\"gallery-image\"\n                 src=\"${image.webformatURL}\"\n                data-source=\"${image.largeImageURL}\"\n               alt=\"${image.tags}\"\n            />\n        </a>\n     </li>`\n        )\n        .join('');\n      gallery.innerHTML = insertHTML;\n        page++;\n        \n        input.value = '';\n\n      if (!lightbox) {\n        lightbox = new SimpleLightbox('.gallery a', {\n          captionDelay: 250,\n          captionsData: 'alt',\n        });\n      } else {\n        lightbox.refresh();\n      }\n    })\n    .catch(error =>\n      iziToast.error({\n        title: 'Error',\n        message: error.message,\n        position: 'topRight',\n        timeout: 5000,\n      })\n    );\n});\n"],"names":["button","input","gallery","API_KEY","loader","page","lightbox","query","URL","response","data","images","insertHTML","image","SimpleLightbox","error","iziToast"],"mappings":"6vBAKA,MAAMA,EAAS,SAAS,cAAc,SAAS,EACzCC,EAAQ,SAAS,cAAc,QAAQ,EACvCC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAU,qCACVC,EAAS,SAAS,cAAc,SAAS,EAC/C,IAAIC,EAAO,EACPC,EAEJN,EAAO,iBAAiB,QAAS,IAAM,CACrCI,EAAO,MAAM,QAAU,QACvB,MAAMG,EAAQN,EAAM,MAAM,KAAI,EAC9B,GAAIM,IAAU,GACZ,OAGFL,EAAQ,UAAY,GAEpB,MAAMM,EAAM,gCAAgCL,CAAO,MAAM,mBACvDI,CACJ,CAAG,6EAA6EF,CAAI,GAElF,MAAMG,CAAG,EACN,KAAKC,GAAY,CAChB,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MACR,0EACV,EAEM,OAAOA,EAAS,MACtB,CAAK,EACA,KAAKC,GAAQ,CACZN,EAAO,MAAM,QAAU,OACvB,MAAMO,EAASD,EAAK,KAEpB,GAAIC,EAAO,SAAW,EACpB,MAAM,IAAI,MACR,0EACV,EAGM,MAAMC,EAAaD,EAChB,IACCE,GACE;AAAA;AAAA;AAAA,gEAGoDA,EAAM,KAAK;AAAA,gEACXA,EAAM,KAAK;AAAA,kEACTA,EAAM,QAAQ;AAAA,mEACbA,EAAM,SAAS;AAAA;AAAA;AAAA,wCAG1CA,EAAM,aAAa;AAAA;AAAA;AAAA,wBAGnCA,EAAM,YAAY;AAAA,+BACXA,EAAM,aAAa;AAAA,sBAC5BA,EAAM,IAAI;AAAA;AAAA;AAAA,WAIvB,EACA,KAAK,EAAE,EACVX,EAAQ,UAAYU,EAClBP,IAEAJ,EAAM,MAAQ,GAEXK,EAMHA,EAAS,QAAO,EALhBA,EAAW,IAAIQ,EAAe,aAAc,CAC1C,aAAc,IACd,aAAc,KACxB,CAAS,CAIT,CAAK,EACA,MAAMC,GACLC,EAAS,MAAM,CACb,MAAO,QACP,QAASD,EAAM,QACf,SAAU,WACV,QAAS,GACjB,CAAO,CACP,CACA,CAAC"}